version: '3'

volumes:
  ckan_data:
  pg_data:
  solr_data:
  ckan_ckan:
    driver: local
    driver_opts: 
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":/System/Volumes/Data/Users/UNHCR/DIMA/KnowledgeHub/ckan/ckan"
  ckanext_kh:
    driver: local
    driver_opts: 
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":/System/Volumes/Data/Users/UNHCR/DIMA/KnowledgeHub/ckanext-knowledgehub/ckanext/knowledgehub"
  ckanext_oauth2:
    driver: local
    driver_opts: 
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":/System/Volumes/Data/Users/UNHCR/DIMA/KnowledgeHub/ckanext-oauth2/ckanext/oauth2"
  ckanext_validation:
    driver: local
    driver_opts: 
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":/System/Volumes/Data/Users/UNHCR/DIMA/KnowledgeHub/ckanext-validation/ckanext/validation"
  ckanext_dr:
    driver: local
    driver_opts: 
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":/System/Volumes/Data/Users/UNHCR/DIMA/KnowledgeHub/ckanext-datarequests/ckanext/datarequests"


services:

  ckan:
    container_name: ckan
    build:
      context: .
    networks:
      - frontend
      - backend
    depends_on:
      - db
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    env_file:
      - ./.ckan-env
    environment:
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
    volumes:
      - ckan_data:/srv/app/data
      - ckan_ckan:/srv/app/src/ckan/ckan
      - ckanext_kh:/srv/app/src/ckanext-knowledgehub/ckanext/knowledgehub
      - ckanext_oauth2:/srv/app/src/ckanext-knowledgehub/ckanext/oauth2
      - ckanext_validation:/srv/app/src/ckanext-knowledgehub/ckanext/validation
      - ckanext_dr:/srv/app/src/ckanext-knowledgehub/ckanext/datarequests

  db:
    container_name: db
    build:
      context: .
      dockerfile: postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]
    ports:
      - "5432:5432"

  solr:
    container_name: solr
    build:
      context: solr
      dockerfile: Dockerfile
    hostname: solr
    ports:
      - "8983:8983"
    volumes:
      - ./solr/ckan:/solr_config
      - solr_data:/opt/solr/server/solr/ckan/data
    networks:
      - backend

  solr-unhcr:
    container_name: solr-unhcr
    build:
      context: solr-unhcr
      dockerfile: Dockerfile
    hostname: solr-unhcr
    ports:
      - "8989:8983"
    networks:
      - backend
    volumes:
      - ./solr/ckanunhcr:/solr_config

  datapusher:
    container_name: datapusher
    env_file: .env
    image: keitaro/ckan-datapusher:${DATAPUSHER_VERSION}
    networks:
      - frontend
      - backend
    ports:
      - "8000:8000"
    environment:
      - DATAPUSHER_MAX_CONTENT_LENGTH=${DATAPUSHER_MAX_CONTENT_LENGTH}
      - DATAPUSHER_CHUNK_SIZE=${DATAPUSHER_CHUNK_SIZE}
      - DATAPUSHER_CHUNK_INSERT_ROWS=${DATAPUSHER_CHUNK_INSERT_ROWS}
      - DATAPUSHER_DOWNLOAD_TIMEOUT=${DATAPUSHER_DOWNLOAD_TIMEOUT}
      - DATAPUSHER_SSL_VERIFY=${DATAPUSHER_SSL_VERIFY}
      - DATAPUSHER_REWRITE_RESOURCES=${DATAPUSHER_REWRITE_RESOURCES}
      - DATAPUSHER_REWRITE_URL=${DATAPUSHER_REWRITE_URL}

  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    networks:
      - backend

networks:
  frontend:
  backend: